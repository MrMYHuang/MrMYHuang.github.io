{"version":3,"file":"input-shims.a918b0ba.js","sources":["../../node_modules/@ionic/core/components/input-shims.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { g as getScrollElement, c as scrollByPoint, a as findClosestIonContent } from './index8.js';\nimport { a as addEventListener, b as removeEventListener, r as raf, q as pointerCoord, c as componentOnReady } from './helpers.js';\n\nconst cloneMap = new WeakMap();\nconst relocateInput = (componentEl, inputEl, shouldRelocate, inputRelativeY = 0) => {\n  if (cloneMap.has(componentEl) === shouldRelocate) {\n    return;\n  }\n  if (shouldRelocate) {\n    addClone(componentEl, inputEl, inputRelativeY);\n  }\n  else {\n    removeClone(componentEl, inputEl);\n  }\n};\nconst isFocused = (input) => {\n  return input === input.getRootNode().activeElement;\n};\nconst addClone = (componentEl, inputEl, inputRelativeY) => {\n  // this allows for the actual input to receive the focus from\n  // the user's touch event, but before it receives focus, it\n  // moves the actual input to a location that will not screw\n  // up the app's layout, and does not allow the native browser\n  // to attempt to scroll the input into place (messing up headers/footers)\n  // the cloned input fills the area of where native input should be\n  // while the native input fakes out the browser by relocating itself\n  // before it receives the actual focus event\n  // We hide the focused input (with the visible caret) invisible by making it scale(0),\n  const parentEl = inputEl.parentNode;\n  // DOM WRITES\n  const clonedEl = inputEl.cloneNode(false);\n  clonedEl.classList.add('cloned-input');\n  clonedEl.tabIndex = -1;\n  parentEl.appendChild(clonedEl);\n  cloneMap.set(componentEl, clonedEl);\n  const doc = componentEl.ownerDocument;\n  const tx = doc.dir === 'rtl' ? 9999 : -9999;\n  componentEl.style.pointerEvents = 'none';\n  inputEl.style.transform = `translate3d(${tx}px,${inputRelativeY}px,0) scale(0)`;\n};\nconst removeClone = (componentEl, inputEl) => {\n  const clone = cloneMap.get(componentEl);\n  if (clone) {\n    cloneMap.delete(componentEl);\n    clone.remove();\n  }\n  componentEl.style.pointerEvents = '';\n  inputEl.style.transform = '';\n};\n\nconst enableHideCaretOnScroll = (componentEl, inputEl, scrollEl) => {\n  if (!scrollEl || !inputEl) {\n    return () => {\n      return;\n    };\n  }\n  const scrollHideCaret = (shouldHideCaret) => {\n    if (isFocused(inputEl)) {\n      relocateInput(componentEl, inputEl, shouldHideCaret);\n    }\n  };\n  const onBlur = () => relocateInput(componentEl, inputEl, false);\n  const hideCaret = () => scrollHideCaret(true);\n  const showCaret = () => scrollHideCaret(false);\n  addEventListener(scrollEl, 'ionScrollStart', hideCaret);\n  addEventListener(scrollEl, 'ionScrollEnd', showCaret);\n  inputEl.addEventListener('blur', onBlur);\n  return () => {\n    removeEventListener(scrollEl, 'ionScrollStart', hideCaret);\n    removeEventListener(scrollEl, 'ionScrollEnd', showCaret);\n    inputEl.addEventListener('ionBlur', onBlur);\n  };\n};\n\nconst SKIP_SELECTOR = 'input, textarea, [no-blur], [contenteditable]';\nconst enableInputBlurring = () => {\n  let focused = true;\n  let didScroll = false;\n  const doc = document;\n  const onScroll = () => {\n    didScroll = true;\n  };\n  const onFocusin = () => {\n    focused = true;\n  };\n  const onTouchend = (ev) => {\n    // if app did scroll return early\n    if (didScroll) {\n      didScroll = false;\n      return;\n    }\n    const active = doc.activeElement;\n    if (!active) {\n      return;\n    }\n    // only blur if the active element is a text-input or a textarea\n    if (active.matches(SKIP_SELECTOR)) {\n      return;\n    }\n    // if the selected target is the active element, do not blur\n    const tapped = ev.target;\n    if (tapped === active) {\n      return;\n    }\n    if (tapped.matches(SKIP_SELECTOR) || tapped.closest(SKIP_SELECTOR)) {\n      return;\n    }\n    focused = false;\n    // TODO: find a better way, why 50ms?\n    setTimeout(() => {\n      if (!focused) {\n        active.blur();\n      }\n    }, 50);\n  };\n  addEventListener(doc, 'ionScrollStart', onScroll);\n  doc.addEventListener('focusin', onFocusin, true);\n  doc.addEventListener('touchend', onTouchend, false);\n  return () => {\n    removeEventListener(doc, 'ionScrollStart', onScroll, true);\n    doc.removeEventListener('focusin', onFocusin, true);\n    doc.removeEventListener('touchend', onTouchend, false);\n  };\n};\n\nconst SCROLL_ASSIST_SPEED = 0.3;\nconst getScrollData = (componentEl, contentEl, keyboardHeight) => {\n  const itemEl = componentEl.closest('ion-item,[ion-item]') || componentEl;\n  return calcScrollData(itemEl.getBoundingClientRect(), contentEl.getBoundingClientRect(), keyboardHeight, componentEl.ownerDocument.defaultView.innerHeight);\n};\nconst calcScrollData = (inputRect, contentRect, keyboardHeight, platformHeight) => {\n  // compute input's Y values relative to the body\n  const inputTop = inputRect.top;\n  const inputBottom = inputRect.bottom;\n  // compute visible area\n  const visibleAreaTop = contentRect.top;\n  const visibleAreaBottom = Math.min(contentRect.bottom, platformHeight - keyboardHeight);\n  // compute safe area\n  const safeAreaTop = visibleAreaTop + 15;\n  const safeAreaBottom = visibleAreaBottom * 0.75;\n  // figure out if each edge of the input is within the safe area\n  const distanceToBottom = safeAreaBottom - inputBottom;\n  const distanceToTop = safeAreaTop - inputTop;\n  // desiredScrollAmount is the negated distance to the safe area according to our calculations.\n  const desiredScrollAmount = Math.round(distanceToBottom < 0 ? -distanceToBottom : distanceToTop > 0 ? -distanceToTop : 0);\n  // our calculations make some assumptions that aren't always true, like the keyboard being closed when an input\n  // gets focus, so make sure we don't scroll the input above the visible area\n  const scrollAmount = Math.min(desiredScrollAmount, inputTop - visibleAreaTop);\n  const distance = Math.abs(scrollAmount);\n  const duration = distance / SCROLL_ASSIST_SPEED;\n  const scrollDuration = Math.min(400, Math.max(150, duration));\n  return {\n    scrollAmount,\n    scrollDuration,\n    scrollPadding: keyboardHeight,\n    inputSafeY: -(inputTop - safeAreaTop) + 4,\n  };\n};\n\nconst enableScrollAssist = (componentEl, inputEl, contentEl, footerEl, keyboardHeight) => {\n  let coord;\n  const touchStart = (ev) => {\n    coord = pointerCoord(ev);\n  };\n  const touchEnd = (ev) => {\n    // input cover touchend/mouseup\n    if (!coord) {\n      return;\n    }\n    // get where the touchend/mouseup ended\n    const endCoord = pointerCoord(ev);\n    // focus this input if the pointer hasn't moved XX pixels\n    // and the input doesn't already have focus\n    if (!hasPointerMoved(6, coord, endCoord) && !isFocused(inputEl)) {\n      // begin the input focus process\n      jsSetFocus(componentEl, inputEl, contentEl, footerEl, keyboardHeight);\n    }\n  };\n  componentEl.addEventListener('touchstart', touchStart, true);\n  componentEl.addEventListener('touchend', touchEnd, true);\n  return () => {\n    componentEl.removeEventListener('touchstart', touchStart, true);\n    componentEl.removeEventListener('touchend', touchEnd, true);\n  };\n};\nconst jsSetFocus = async (componentEl, inputEl, contentEl, footerEl, keyboardHeight) => {\n  if (!contentEl && !footerEl) {\n    return;\n  }\n  const scrollData = getScrollData(componentEl, (contentEl || footerEl), keyboardHeight);\n  if (contentEl && Math.abs(scrollData.scrollAmount) < 4) {\n    // the text input is in a safe position that doesn't\n    // require it to be scrolled into view, just set focus now\n    inputEl.focus();\n    return;\n  }\n  // temporarily move the focus to the focus holder so the browser\n  // doesn't freak out while it's trying to get the input in place\n  // at this point the native text input still does not have focus\n  relocateInput(componentEl, inputEl, true, scrollData.inputSafeY);\n  inputEl.focus();\n  /**\n   * Relocating/Focusing input causes the\n   * click event to be cancelled, so\n   * manually fire one here.\n   */\n  raf(() => componentEl.click());\n  if (typeof window !== 'undefined') {\n    let scrollContentTimeout;\n    const scrollContent = async () => {\n      // clean up listeners and timeouts\n      if (scrollContentTimeout !== undefined) {\n        clearTimeout(scrollContentTimeout);\n      }\n      window.removeEventListener('ionKeyboardDidShow', doubleKeyboardEventListener);\n      window.removeEventListener('ionKeyboardDidShow', scrollContent);\n      // scroll the input into place\n      if (contentEl) {\n        await scrollByPoint(contentEl, 0, scrollData.scrollAmount, scrollData.scrollDuration);\n      }\n      // the scroll view is in the correct position now\n      // give the native text input focus\n      relocateInput(componentEl, inputEl, false, scrollData.inputSafeY);\n      // ensure this is the focused input\n      inputEl.focus();\n    };\n    const doubleKeyboardEventListener = () => {\n      window.removeEventListener('ionKeyboardDidShow', doubleKeyboardEventListener);\n      window.addEventListener('ionKeyboardDidShow', scrollContent);\n    };\n    if (contentEl) {\n      const scrollEl = await getScrollElement(contentEl);\n      /**\n       * scrollData will only consider the amount we need\n       * to scroll in order to properly bring the input\n       * into view. It will not consider the amount\n       * we can scroll in the content element.\n       * As a result, scrollData may request a greater\n       * scroll position than is currently available\n       * in the DOM. If this is the case, we need to\n       * wait for the webview to resize/the keyboard\n       * to show in order for additional scroll\n       * bandwidth to become available.\n       */\n      const totalScrollAmount = scrollEl.scrollHeight - scrollEl.clientHeight;\n      if (scrollData.scrollAmount > totalScrollAmount - scrollEl.scrollTop) {\n        /**\n         * On iOS devices, the system will show a \"Passwords\" bar above the keyboard\n         * after the initial keyboard is shown. This prevents the webview from resizing\n         * until the \"Passwords\" bar is shown, so we need to wait for that to happen first.\n         */\n        if (inputEl.type === 'password') {\n          // Add 50px to account for the \"Passwords\" bar\n          scrollData.scrollAmount += 50;\n          window.addEventListener('ionKeyboardDidShow', doubleKeyboardEventListener);\n        }\n        else {\n          window.addEventListener('ionKeyboardDidShow', scrollContent);\n        }\n        /**\n         * This should only fire in 2 instances:\n         * 1. The app is very slow.\n         * 2. The app is running in a browser on an old OS\n         * that does not support Ionic Keyboard Events\n         */\n        scrollContentTimeout = setTimeout(scrollContent, 1000);\n        return;\n      }\n    }\n    scrollContent();\n  }\n};\nconst hasPointerMoved = (threshold, startCoord, endCoord) => {\n  if (startCoord && endCoord) {\n    const deltaX = startCoord.x - endCoord.x;\n    const deltaY = startCoord.y - endCoord.y;\n    const distance = deltaX * deltaX + deltaY * deltaY;\n    return distance > threshold * threshold;\n  }\n  return false;\n};\n\nconst PADDING_TIMER_KEY = '$ionPaddingTimer';\nconst enableScrollPadding = (keyboardHeight) => {\n  const doc = document;\n  const onFocusin = (ev) => {\n    setScrollPadding(ev.target, keyboardHeight);\n  };\n  const onFocusout = (ev) => {\n    setScrollPadding(ev.target, 0);\n  };\n  doc.addEventListener('focusin', onFocusin);\n  doc.addEventListener('focusout', onFocusout);\n  return () => {\n    doc.removeEventListener('focusin', onFocusin);\n    doc.removeEventListener('focusout', onFocusout);\n  };\n};\nconst setScrollPadding = (input, keyboardHeight) => {\n  var _a, _b;\n  if (input.tagName !== 'INPUT') {\n    return;\n  }\n  if (input.parentElement && input.parentElement.tagName === 'ION-INPUT') {\n    return;\n  }\n  if (((_b = (_a = input.parentElement) === null || _a === void 0 ? void 0 : _a.parentElement) === null || _b === void 0 ? void 0 : _b.tagName) === 'ION-SEARCHBAR') {\n    return;\n  }\n  const el = findClosestIonContent(input);\n  if (el === null) {\n    return;\n  }\n  const timer = el[PADDING_TIMER_KEY];\n  if (timer) {\n    clearTimeout(timer);\n  }\n  if (keyboardHeight > 0) {\n    el.style.setProperty('--keyboard-offset', `${keyboardHeight}px`);\n  }\n  else {\n    el[PADDING_TIMER_KEY] = setTimeout(() => {\n      el.style.setProperty('--keyboard-offset', '0px');\n    }, 120);\n  }\n};\n\nconst INPUT_BLURRING = true;\nconst SCROLL_PADDING = true;\nconst startInputShims = (config) => {\n  const doc = document;\n  const keyboardHeight = config.getNumber('keyboardHeight', 290);\n  const scrollAssist = config.getBoolean('scrollAssist', true);\n  const hideCaret = config.getBoolean('hideCaretOnScroll', true);\n  const inputBlurring = config.getBoolean('inputBlurring', true);\n  const scrollPadding = config.getBoolean('scrollPadding', true);\n  const inputs = Array.from(doc.querySelectorAll('ion-input, ion-textarea'));\n  const hideCaretMap = new WeakMap();\n  const scrollAssistMap = new WeakMap();\n  const registerInput = async (componentEl) => {\n    await new Promise((resolve) => componentOnReady(componentEl, resolve));\n    const inputRoot = componentEl.shadowRoot || componentEl;\n    const inputEl = inputRoot.querySelector('input') || inputRoot.querySelector('textarea');\n    const scrollEl = findClosestIonContent(componentEl);\n    const footerEl = !scrollEl ? componentEl.closest('ion-footer') : null;\n    if (!inputEl) {\n      return;\n    }\n    if (!!scrollEl && hideCaret && !hideCaretMap.has(componentEl)) {\n      const rmFn = enableHideCaretOnScroll(componentEl, inputEl, scrollEl);\n      hideCaretMap.set(componentEl, rmFn);\n    }\n    if ((!!scrollEl || !!footerEl) && scrollAssist && !scrollAssistMap.has(componentEl)) {\n      const rmFn = enableScrollAssist(componentEl, inputEl, scrollEl, footerEl, keyboardHeight);\n      scrollAssistMap.set(componentEl, rmFn);\n    }\n  };\n  const unregisterInput = (componentEl) => {\n    if (hideCaret) {\n      const fn = hideCaretMap.get(componentEl);\n      if (fn) {\n        fn();\n      }\n      hideCaretMap.delete(componentEl);\n    }\n    if (scrollAssist) {\n      const fn = scrollAssistMap.get(componentEl);\n      if (fn) {\n        fn();\n      }\n      scrollAssistMap.delete(componentEl);\n    }\n  };\n  if (inputBlurring && INPUT_BLURRING) {\n    enableInputBlurring();\n  }\n  if (scrollPadding && SCROLL_PADDING) {\n    enableScrollPadding(keyboardHeight);\n  }\n  // Input might be already loaded in the DOM before ion-device-hacks did.\n  // At this point we need to look for all of the inputs not registered yet\n  // and register them.\n  for (const input of inputs) {\n    registerInput(input);\n  }\n  doc.addEventListener('ionInputDidLoad', ((ev) => {\n    registerInput(ev.detail);\n  }));\n  doc.addEventListener('ionInputDidUnload', ((ev) => {\n    unregisterInput(ev.detail);\n  }));\n};\n\nexport { startInputShims };\n"],"names":["cloneMap","relocateInput","componentEl","inputEl","shouldRelocate","inputRelativeY","addClone","removeClone","isFocused","input","parentEl","clonedEl","tx","clone","enableHideCaretOnScroll","scrollEl","scrollHideCaret","shouldHideCaret","onBlur","hideCaret","showCaret","addEventListener","removeEventListener","SKIP_SELECTOR","enableInputBlurring","focused","didScroll","doc","onScroll","onFocusin","onTouchend","ev","active","tapped","SCROLL_ASSIST_SPEED","getScrollData","contentEl","keyboardHeight","itemEl","calcScrollData","inputRect","contentRect","platformHeight","inputTop","inputBottom","visibleAreaTop","visibleAreaBottom","safeAreaTop","distanceToBottom","distanceToTop","desiredScrollAmount","scrollAmount","duration","scrollDuration","enableScrollAssist","footerEl","coord","touchStart","pointerCoord","touchEnd","endCoord","hasPointerMoved","jsSetFocus","scrollData","raf","scrollContentTimeout","scrollContent","doubleKeyboardEventListener","scrollByPoint","getScrollElement","totalScrollAmount","threshold","startCoord","deltaX","deltaY","PADDING_TIMER_KEY","enableScrollPadding","setScrollPadding","onFocusout","_a","_b","el","findClosestIonContent","timer","INPUT_BLURRING","SCROLL_PADDING","startInputShims","config","scrollAssist","inputBlurring","scrollPadding","inputs","hideCaretMap","scrollAssistMap","registerInput","resolve","componentOnReady","inputRoot","rmFn","unregisterInput","fn"],"mappings":"yFAAA;AAAA;AAAA,GAMA,MAAMA,EAAW,IAAI,QACfC,EAAgB,CAACC,EAAaC,EAASC,EAAgBC,EAAiB,IAAM,CAC9EL,EAAS,IAAIE,CAAW,IAAME,IAG9BA,EACFE,EAASJ,EAAaC,EAASE,CAAc,EAG7CE,EAAYL,EAAaC,CAAO,EAEpC,EACMK,EAAaC,GACVA,IAAUA,EAAM,YAAW,EAAG,cAEjCH,EAAW,CAACJ,EAAaC,EAASE,IAAmB,CAUzD,MAAMK,EAAWP,EAAQ,WAEnBQ,EAAWR,EAAQ,UAAU,EAAK,EACxCQ,EAAS,UAAU,IAAI,cAAc,EACrCA,EAAS,SAAW,GACpBD,EAAS,YAAYC,CAAQ,EAC7BX,EAAS,IAAIE,EAAaS,CAAQ,EAElC,MAAMC,EADMV,EAAY,cACT,MAAQ,MAAQ,KAAO,MACtCA,EAAY,MAAM,cAAgB,OAClCC,EAAQ,MAAM,UAAY,eAAeS,OAAQP,iBACnD,EACME,EAAc,CAACL,EAAaC,IAAY,CAC5C,MAAMU,EAAQb,EAAS,IAAIE,CAAW,EAClCW,IACFb,EAAS,OAAOE,CAAW,EAC3BW,EAAM,OAAM,GAEdX,EAAY,MAAM,cAAgB,GAClCC,EAAQ,MAAM,UAAY,EAC5B,EAEMW,EAA0B,CAACZ,EAAaC,EAASY,IAAa,CAClE,GAAI,CAACA,GAAY,CAACZ,EAChB,MAAO,IAAM,CAEjB,EAEE,MAAMa,EAAmBC,GAAoB,CACvCT,EAAUL,CAAO,GACnBF,EAAcC,EAAaC,EAASc,CAAe,CAEzD,EACQC,EAAS,IAAMjB,EAAcC,EAAaC,EAAS,EAAK,EACxDgB,EAAY,IAAMH,EAAgB,EAAI,EACtCI,EAAY,IAAMJ,EAAgB,EAAK,EAC7C,OAAAK,EAAiBN,EAAU,iBAAkBI,CAAS,EACtDE,EAAiBN,EAAU,eAAgBK,CAAS,EACpDjB,EAAQ,iBAAiB,OAAQe,CAAM,EAChC,IAAM,CACXI,EAAoBP,EAAU,iBAAkBI,CAAS,EACzDG,EAAoBP,EAAU,eAAgBK,CAAS,EACvDjB,EAAQ,iBAAiB,UAAWe,CAAM,CAC9C,CACA,EAEMK,EAAgB,gDAChBC,EAAsB,IAAM,CAChC,IAAIC,EAAU,GACVC,EAAY,GAChB,MAAMC,EAAM,SACNC,EAAW,IAAM,CACrBF,EAAY,EAChB,EACQG,EAAY,IAAM,CACtBJ,EAAU,EACd,EACQK,EAAcC,GAAO,CAEzB,GAAIL,EAAW,CACbA,EAAY,GACZ,MACD,CACD,MAAMM,EAASL,EAAI,cAKnB,GAJI,CAACK,GAIDA,EAAO,QAAQT,CAAa,EAC9B,OAGF,MAAMU,EAASF,EAAG,OACdE,IAAWD,IAGXC,EAAO,QAAQV,CAAa,GAAKU,EAAO,QAAQV,CAAa,IAGjEE,EAAU,GAEV,WAAW,IAAM,CACVA,GACHO,EAAO,KAAI,CAEd,EAAE,EAAE,GACT,EACE,OAAAX,EAAiBM,EAAK,iBAAkBC,CAAQ,EAChDD,EAAI,iBAAiB,UAAWE,EAAW,EAAI,EAC/CF,EAAI,iBAAiB,WAAYG,EAAY,EAAK,EAC3C,IAAM,CACXR,EAAoBK,EAAK,iBAAkBC,EAAU,EAAI,EACzDD,EAAI,oBAAoB,UAAWE,EAAW,EAAI,EAClDF,EAAI,oBAAoB,WAAYG,EAAY,EAAK,CACzD,CACA,EAEMI,EAAsB,GACtBC,EAAgB,CAACjC,EAAakC,EAAWC,IAAmB,CAChE,MAAMC,EAASpC,EAAY,QAAQ,qBAAqB,GAAKA,EAC7D,OAAOqC,EAAeD,EAAO,sBAAqB,EAAIF,EAAU,wBAAyBC,EAAgBnC,EAAY,cAAc,YAAY,WAAW,CAC5J,EACMqC,EAAiB,CAACC,EAAWC,EAAaJ,EAAgBK,IAAmB,CAEjF,MAAMC,EAAWH,EAAU,IACrBI,EAAcJ,EAAU,OAExBK,EAAiBJ,EAAY,IAC7BK,EAAoB,KAAK,IAAIL,EAAY,OAAQC,EAAiBL,CAAc,EAEhFU,EAAcF,EAAiB,GAG/BG,EAFiBF,EAAoB,IAEDF,EACpCK,EAAgBF,EAAcJ,EAE9BO,EAAsB,KAAK,MAAMF,EAAmB,EAAI,CAACA,EAAmBC,EAAgB,EAAI,CAACA,EAAgB,CAAC,EAGlHE,EAAe,KAAK,IAAID,EAAqBP,EAAWE,CAAc,EAEtEO,EADW,KAAK,IAAID,CAAY,EACVjB,EACtBmB,EAAiB,KAAK,IAAI,IAAK,KAAK,IAAI,IAAKD,CAAQ,CAAC,EAC5D,MAAO,CACL,aAAAD,EACA,eAAAE,EACA,cAAehB,EACf,WAAY,EAAEM,EAAWI,GAAe,CAC5C,CACA,EAEMO,EAAqB,CAACpD,EAAaC,EAASiC,EAAWmB,EAAUlB,IAAmB,CACxF,IAAImB,EACJ,MAAMC,EAAc1B,GAAO,CACzByB,EAAQE,EAAa3B,CAAE,CAC3B,EACQ4B,EAAY5B,GAAO,CAEvB,GAAI,CAACyB,EACH,OAGF,MAAMI,EAAWF,EAAa3B,CAAE,EAG5B,CAAC8B,EAAgB,EAAGL,EAAOI,CAAQ,GAAK,CAACpD,EAAUL,CAAO,GAE5D2D,EAAW5D,EAAaC,EAASiC,EAAWmB,EAAUlB,CAAc,CAE1E,EACE,OAAAnC,EAAY,iBAAiB,aAAcuD,EAAY,EAAI,EAC3DvD,EAAY,iBAAiB,WAAYyD,EAAU,EAAI,EAChD,IAAM,CACXzD,EAAY,oBAAoB,aAAcuD,EAAY,EAAI,EAC9DvD,EAAY,oBAAoB,WAAYyD,EAAU,EAAI,CAC9D,CACA,EACMG,EAAa,MAAO5D,EAAaC,EAASiC,EAAWmB,EAAUlB,IAAmB,CACtF,GAAI,CAACD,GAAa,CAACmB,EACjB,OAEF,MAAMQ,EAAa5B,EAAcjC,EAAckC,GAAamB,EAAWlB,CAAc,EACrF,GAAID,GAAa,KAAK,IAAI2B,EAAW,YAAY,EAAI,EAAG,CAGtD5D,EAAQ,MAAK,EACb,MACD,CAYD,GARAF,EAAcC,EAAaC,EAAS,GAAM4D,EAAW,UAAU,EAC/D5D,EAAQ,MAAK,EAMb6D,EAAI,IAAM9D,EAAY,MAAK,CAAE,EACzB,OAAO,OAAW,IAAa,CACjC,IAAI+D,EACJ,MAAMC,EAAgB,SAAY,CAE5BD,IAAyB,QAC3B,aAAaA,CAAoB,EAEnC,OAAO,oBAAoB,qBAAsBE,CAA2B,EAC5E,OAAO,oBAAoB,qBAAsBD,CAAa,EAE1D9B,GACF,MAAMgC,EAAchC,EAAW,EAAG2B,EAAW,aAAcA,EAAW,cAAc,EAItF9D,EAAcC,EAAaC,EAAS,GAAO4D,EAAW,UAAU,EAEhE5D,EAAQ,MAAK,CACnB,EACUgE,EAA8B,IAAM,CACxC,OAAO,oBAAoB,qBAAsBA,CAA2B,EAC5E,OAAO,iBAAiB,qBAAsBD,CAAa,CACjE,EACI,GAAI9B,EAAW,CACb,MAAMrB,EAAW,MAAMsD,EAAiBjC,CAAS,EAa3CkC,EAAoBvD,EAAS,aAAeA,EAAS,aAC3D,GAAIgD,EAAW,aAAeO,EAAoBvD,EAAS,UAAW,CAMhEZ,EAAQ,OAAS,YAEnB4D,EAAW,cAAgB,GAC3B,OAAO,iBAAiB,qBAAsBI,CAA2B,GAGzE,OAAO,iBAAiB,qBAAsBD,CAAa,EAQ7DD,EAAuB,WAAWC,EAAe,GAAI,EACrD,MACD,CACF,CACDA,GACD,CACH,EACML,EAAkB,CAACU,EAAWC,EAAYZ,IAAa,CAC3D,GAAIY,GAAcZ,EAAU,CAC1B,MAAMa,EAASD,EAAW,EAAIZ,EAAS,EACjCc,EAASF,EAAW,EAAIZ,EAAS,EAEvC,OADiBa,EAASA,EAASC,EAASA,EAC1BH,EAAYA,CAC/B,CACD,MAAO,EACT,EAEMI,EAAoB,mBACpBC,EAAuBvC,GAAmB,CAC9C,MAAMV,EAAM,SACNE,EAAaE,GAAO,CACxB8C,EAAiB9C,EAAG,OAAQM,CAAc,CAC9C,EACQyC,EAAc/C,GAAO,CACzB8C,EAAiB9C,EAAG,OAAQ,CAAC,CACjC,EACE,OAAAJ,EAAI,iBAAiB,UAAWE,CAAS,EACzCF,EAAI,iBAAiB,WAAYmD,CAAU,EACpC,IAAM,CACXnD,EAAI,oBAAoB,UAAWE,CAAS,EAC5CF,EAAI,oBAAoB,WAAYmD,CAAU,CAClD,CACA,EACMD,EAAmB,CAACpE,EAAO4B,IAAmB,CAClD,IAAI0C,EAAIC,EAOR,GANIvE,EAAM,UAAY,SAGlBA,EAAM,eAAiBA,EAAM,cAAc,UAAY,eAGrDuE,GAAMD,EAAKtE,EAAM,iBAAmB,MAAQsE,IAAO,OAAS,OAASA,EAAG,iBAAmB,MAAQC,IAAO,OAAS,OAASA,EAAG,WAAa,gBAChJ,OAEF,MAAMC,EAAKC,EAAsBzE,CAAK,EACtC,GAAIwE,IAAO,KACT,OAEF,MAAME,EAAQF,EAAGN,GACbQ,GACF,aAAaA,CAAK,EAEhB9C,EAAiB,EACnB4C,EAAG,MAAM,YAAY,oBAAqB,GAAG5C,KAAkB,EAG/D4C,EAAGN,GAAqB,WAAW,IAAM,CACvCM,EAAG,MAAM,YAAY,oBAAqB,KAAK,CAChD,EAAE,GAAG,CAEV,EAEMG,EAAiB,GACjBC,EAAiB,GACjBC,EAAmBC,GAAW,CAClC,MAAM5D,EAAM,SACNU,EAAiBkD,EAAO,UAAU,iBAAkB,GAAG,EACvDC,EAAeD,EAAO,WAAW,eAAgB,EAAI,EACrDpE,EAAYoE,EAAO,WAAW,oBAAqB,EAAI,EACvDE,EAAgBF,EAAO,WAAW,gBAAiB,EAAI,EACvDG,EAAgBH,EAAO,WAAW,gBAAiB,EAAI,EACvDI,EAAS,MAAM,KAAKhE,EAAI,iBAAiB,yBAAyB,CAAC,EACnEiE,EAAe,IAAI,QACnBC,EAAkB,IAAI,QACtBC,EAAgB,MAAO5F,GAAgB,CAC3C,MAAM,IAAI,QAAS6F,GAAYC,EAAiB9F,EAAa6F,CAAO,CAAC,EACrE,MAAME,EAAY/F,EAAY,YAAcA,EACtCC,EAAU8F,EAAU,cAAc,OAAO,GAAKA,EAAU,cAAc,UAAU,EAChFlF,EAAWmE,EAAsBhF,CAAW,EAC5CqD,EAAYxC,EAA+C,KAApCb,EAAY,QAAQ,YAAY,EAC7D,GAAI,EAACC,EAGL,IAAI,CAAC,CAACY,GAAYI,GAAa,CAACyE,EAAa,IAAI1F,CAAW,EAAG,CAC7D,MAAMgG,EAAOpF,EAAwBZ,EAAaC,EAASY,CAAQ,EACnE6E,EAAa,IAAI1F,EAAagG,CAAI,CACnC,CACD,IAAK,CAAC,CAACnF,GAAY,CAAC,CAACwC,IAAaiC,GAAgB,CAACK,EAAgB,IAAI3F,CAAW,EAAG,CACnF,MAAMgG,EAAO5C,EAAmBpD,EAAaC,EAASY,EAAUwC,EAAUlB,CAAc,EACxFwD,EAAgB,IAAI3F,EAAagG,CAAI,CACtC,EACL,EACQC,EAAmBjG,GAAgB,CACvC,GAAIiB,EAAW,CACb,MAAMiF,EAAKR,EAAa,IAAI1F,CAAW,EACnCkG,GACFA,IAEFR,EAAa,OAAO1F,CAAW,CAChC,CACD,GAAIsF,EAAc,CAChB,MAAMY,EAAKP,EAAgB,IAAI3F,CAAW,EACtCkG,GACFA,IAEFP,EAAgB,OAAO3F,CAAW,CACnC,CACL,EACMuF,GAAiBL,GACnB5D,IAEEkE,GAAiBL,GACnBT,EAAoBvC,CAAc,EAKpC,UAAW5B,KAASkF,EAClBG,EAAcrF,CAAK,EAErBkB,EAAI,iBAAiB,kBAAqBI,GAAO,CAC/C+D,EAAc/D,EAAG,MAAM,CAC3B,GACEJ,EAAI,iBAAiB,oBAAuBI,GAAO,CACjDoE,EAAgBpE,EAAG,MAAM,CAC7B,EACA"}